extends theme

block title
	title= toonName + ' - ToonStore'

block append includes
	link(rel='stylesheet', type='text/css', href='//fonts.googleapis.com/css?family=Metamorphous')
	link(rel='stylesheet', type='text/css', href='/css/charsheet.css')
	script(src='/js/knockout-2.2.1.js')
	script(src='/js/charsheet.js')
	script.
		$(document).ready( initialize );

block content

	#column1.column
	#column2.column
	#column3.column

	section#general
		p.sectionHeader(data-bind='text: name')
		p (
			span(data-bind='text: player')
			)

	section#aspects(data-bind='with: aspects')
		p.sectionHeader Aspects

		.field
			p.fieldLabel High Concept:
			p(data-bind='text: high_concept.name')

		.field
			p.fieldLabel Trouble:
			p(data-bind='text: trouble.name')

		.field
			p.fieldLabel Other Aspects:
			// ko foreach: aspects
			p(data-bind='text: name')
			// /ko

//-
	section#stress
		p.sectionHeader Stress

		table#stressTable
			thead: tr
				th &nbsp;
				-for(var num=1; num<9; num++)
					th= num

			tbody

				for track in toon.stress
					tr(id=track.name)
						th= track.name
							p.subtext= '('+track.skill+')'
						-for(var i=1; i<9; i++)
							td
								if i <= track.strength || (i > track.strength+1 && i < track.strength+track.toughness)
									if track.used.indexOf(i) != -1
										input.stressBox(id=track.name+i, type='checkbox', checked='checked')
									else
										input.stressBox(id=track.name+i, type='checkbox')
								else if track.toughness != 0 && i == track.strength+1 
									if track.used.indexOf(i) != -1
										input.stressBox.leftParen(id=track.name+i, type='checkbox', checked='checked')
									else
										input.stressBox.leftParen(id=track.name+i, type='checkbox')
								else if track.toughness != 0 && i == track.strength+track.toughness
									if track.used.indexOf(i) != -1
										input.stressBox.rightParen(id=track.name+i, type='checkbox', checked='checked')
									else
										input.stressBox.rightParen(id=track.name+i, type='checkbox')
								else
									input.stressBox(id=track.name+i, type='checkbox', disabled='disabled')

								if logged_user == user
									label(for=track.name+i)
								else
									label

					for armor in track.armor
						tr(id=track.name+'-'+armor.vs)
							th: p.subtext= 'Vs. '+armor.vs
							-for(var i=1; i<=armor.strength; i++)
								td
									if armor.used.indexOf(i) != -1
										input.stressBox(id=track.name+'-'+armor.vs+i, type='checkbox', checked='checked')
									else
										input.stressBox(id=track.name+'-'+armor.vs+i, type='checkbox')

									if logged_user == user
										label(for=track.name+'-'+armor.vs+i)
									else
										label

							
	section#consequences
		p.sectionHeader Consequences

		table#conseqTable
			thead
				tr
					th Type
					th P/M/S
					th Stress
					th Used?
					th Aspect
			tbody
				- var row = 1;
				for conseq in toon.consequences
					tr
						td= conseq.type
						td= conseq.mode

						if conseq.type == 'Mild'
							td -2
						if conseq.type == 'Moderate'
							td -4
						if conseq.type == 'Severe'
							td -6
						if conseq.type == 'Extreme'
							td -8

						td
							input.stressBox(id='consequence'+row, type='checkbox', checked=conseq.used)
							if logged_user == user
								label(for='consequence'+row)
							else
								label
						td= conseq.aspect
						- row += 1;

	section#totals

		img#star(src='/img/pentacle.png')
		#borderOcclude

		p#powerLevel Power Level:
			br
			| #{toon.totals.power_level}
		p#skillCap Skill Cap:
			br
			| #{toon.totals.skill_cap}

		p#skillsSpent.bubble= toon.totals.skills_total-toon.totals.skills_available
		p.label Skill Points Spent
		p#skillsAvailable.bubble= toon.totals.skills_available
		p.label Available

		p#baseRefresh.bubble.doubleBubble= toon.totals.base_refresh
		p.label Base Refresh Level
		p#adjustedRefresh.bubble.doubleBubble= toon.totals.adjusted_refresh
		p.label Adjusted Refresh
		p#fatePoints.bubble.doubleBubble= toon.totals.fate_points
		p.label Fate Points


	section#skills
		p.sectionHeader Skills

		table#skillTable
			tr
				th Superb (+5)
				td: p= toon.skills[5].sort().join(', ')
			tr
				th Great (+4)
				td: p= toon.skills[4].sort().join(', ')
			tr
				th Good (+3)
				td: p= toon.skills[3].sort().join(', ')
			tr
				th Fair (+2)
				td: p= toon.skills[2].sort().join(', ')
			tr
				th Average (+1)
				td: p= toon.skills[1].sort().join(', ')

	section#powers
		p.sectionHeader Stunts & Powers

		table#powerTable
			thead: tr
				th Cost
				th Ability

			tbody

				for power in toon.powers
					tr
						td.mainRow= power.cost
						td.mainRow= power.name

					if power.description
						tr
							td &nbsp;
							td: p
								for line in power.description.split('\n')
									= line
									br

				tr
						td.mainRow= toon.totals.adjusted_refresh - toon.totals.base_refresh
						td.mainRow Total Refresh Adjustment
