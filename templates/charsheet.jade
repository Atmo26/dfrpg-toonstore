extends index

block title
	title= toonName + ' | Online Dresden Files RPG Character Hosting | ToonStore.net'

block append styles
	link(rel='stylesheet', type='text/css', href='//fonts.googleapis.com/css?family=Metamorphous')
	link(rel='stylesheet', type='text/css', href='/static/css/charsheet.css')
	link(rel='stylesheet', type='text/css', href='/static/css/jquery-ui-1.10.3.custom.css')

block append includes
	script(src='/static/js/jquery-ui-1.10.3.custom.js')
	script(src='/static/js/jquery.ui.touch-punch.min.js')
	script(src='/static/js/knockout-2.2.1.js')
	script(src='/static/js/markdown.js')
	script(src='/static/js/viewmodel.js')
	script(src='/static/js/charsheet.js')
	script.
		overrideUserRedirect = true;
		$(document).ready(function(){
			$('.navbar > ul.navmenu').menu({position: {collision: 'flipfit'}});
		});

block append header

	//if logged_user == owner
	#charnav.navbar
		ul.navmenu
			li
				a Panels
					span.subarrow
				ul
					li
						a Optional Panels
							span.subarrow
						ul
							li
								input(type='checkbox', data-bind='checked: $root.notes.enabled')
								a(href='#notes') Notes
							li
								input(type='checkbox', data-bind='checked: $root.casting.enabled')
								a(href='#spellcasting') Spellcasting
					li: a(href='#aspects') Aspects
					li: a(href='#skills') Skills
					li: a(href='#stress') Stress
					li: a(href='#conseq') Consequences
					li: a(href='#totals') Totals
					li: a(href='#powers') Stunts & Powers

		.navitem: a(href='javascript:;', onclick='pushToServer()') Save

block content


	.sheet-panel-group
		//-if logged_user == owner
			.sheet-panel
				input#save(type='button', value='Save', onclick='pushToServer()')

		#general.sheet-panel
			
			p.sectionHeader
				span(data-bind='visible: !generalEditing(), text: name')
				input(type='text', data-bind='visible: generalEditing, value: name')
				if logged_user == owner
					input.iconButton(type='image', src='/static/img/glyphicons/glyphicons_150_edit.png',
						onclick='viewModel.generalEditing( !viewModel.generalEditing() )')
			div
				span(data-bind='visible: !generalEditing(), text: "("+player()+")"')
				input(type='text', data-bind='visible: generalEditing, value: player')

	.sheet-panel-group

		#aspects.sheet-panel(data-bind='with: aspects')
			a#aspects
			p.sectionHeader Aspects
				if logged_user == owner
					input.iconButton(type='image', src='/static/img/glyphicons/glyphicons_150_edit.png',
						onclick='viewModel.aspects.editing( !viewModel.aspects.editing() )')

			.field
				p.fieldLabel High Concept:
				p(data-bind='visible: !editing(), text: high_concept.name')
				input(type='text', data-bind='visible: editing, value: high_concept.name')

			.field
				p.fieldLabel Trouble:
				p(data-bind='visible: !editing(), text: trouble.name')
				input(type='text', data-bind='visible: editing, value: trouble.name')

			.field
				p.fieldLabel Other Aspects:
				// ko foreach: aspects
				p(data-bind='visible: !$parent.editing(), text: name')
				div(data-bind='if: $parent.editing')
					input(type='text', data-bind='visible: $parent.editing, value: name')
					input.iconButton(type='image', style='width: 15px; height: 15px;',
						src='/static/img/glyphicons/glyphicons_192_circle_remove.png',
						data-bind='attr: {onclick: "removeAspect("+$index()+")"}')
				// /ko

			input.iconButton(type='image', src='/static/img/glyphicons/glyphicons_190_circle_plus.png',
				onclick='addAspect()', data-bind='visible: editing')


		#skills.sheet-panel
			a#skills
			p.sectionHeader Skills
				if logged_user == owner
					input.iconButton(type='image', src='/static/img/glyphicons/glyphicons_150_edit.png',
						onclick='viewModel.skills.editing( !viewModel.skills.editing() )')

			p(data-bind='visible: $root.skills.editing')
				| Drag skills to rearrange
				br
				| Drop on +0 to remove

			table#skillTable
				tbody(data-bind='foreach: skills.sets')
					tr(data-bind='if: $root.skills.editing() || index != 0, droppable: $root.skills.editing')
						th(data-bind='text: level_text')
						td: p(data-bind='foreach: skills')
							span(data-bind='visible: $index() != 0') , 
							span(style='white-space: nowrap;', data-bind='draggable: $root.skills.editing')
								span(data-bind='text: $data')
								img(data-bind='visible: $root.skills.editing', src='/static/img/glyphicons/glyphicons_186_move.png', style='width: 10px; height: 10px;')
						
			div(data-bind='if: skills.editing()')
				form(onsubmit='addSkill(); return false;')
					input#newSkill(type='text')
					input(type='submit', value='Add skill')
				p#validSkillLadder(data-bind='text: skills.valid')

	.sheet-panel-group

		#stress.sheet-panel
			a#stress
			p.sectionHeader Stress
				if logged_user == owner
					input.iconButton(type='image', src='/static/img/glyphicons/glyphicons_150_edit.png',
						onclick='viewModel.stress.editing( !viewModel.stress.editing() )')


			#stressBlock(data-bind='ifnot: $root.stress.editing')
				.track
					.rowHeader
					.boxes
						for i in [1,2,3,4,5,6,7,8]
							.colHeader
								span= i

				// ko foreach: stress
				.track
					.rowHeader
						span(data-bind='text: name')
						span.subtitle(data-bind='text: "("+skill()+")"')
					.boxes
						// ko foreach: [0,1,2,3,4,5,6,7]
						.box
							// ko if: $parent.boxes()[$data] != undefined
							input(type='checkbox', data-bind='attr: {id: $parent.name()+"-"+$parent.skill()+"-"+$data}, css: $parent.boxes()[$data].icon, checked: $parent.boxes()[$data].used')
							// /ko
							// ko ifnot: $parent.boxes()[$data] != undefined
							input.stressBox(type='checkbox', disabled='disabled', data-bind='attr: {id: $parent.name()+"-"+$parent.skill()+"-"+$data}')
							// /ko
							if logged_user == owner
								label(data-bind='attr: {for: $parent.name()+"-"+$parent.skill()+"-"+$data}')
							else
								label
						// /ko

				// ko foreach: armor
				.track(data-bind='text: text')
				// /ko

				// /ko

			#stressEditBlock(data-bind='if: $root.stress.editing')
				// ko foreach: stress
				.track
					.section
						input(type='text', data-bind='value: name')
						input(type='text', data-bind='value: skill')
					.section
						label Strength
						input(type='number', data-bind='value: strength')
					.section
						label Tough
						input(type='number', data-bind='value: toughness')
					.button-section
						input.iconButton(type='image', src='/static/img/glyphicons/glyphicons_270_shield.png',
							data-bind='attr: {onclick: "addArmorTo("+$index()+")"}')
						input.iconButton(type='image', src='/static/img/glyphicons/glyphicons_192_circle_remove.png',
							data-bind='attr: {onclick: "removeStressTrack("+$index()+")"}')

				// ko foreach: armor
				.track
					span Armor:
					input(type='number', data-bind='value: strength')
					span  vs. 
					input(type='text', data-bind='value: vs')
					input.iconButton(type='image', src='/static/img/glyphicons/glyphicons_192_circle_remove.png',
						data-bind='attr: {onclick: "removeArmorFrom("+$parentContext.$index()+","+$index()+")"}')
				// /ko

				// /ko

			input.iconButton(type='image', data-bind='visible: $root.stress.editing',
				src='/static/img/glyphicons/glyphicons_190_circle_plus.png', onclick='addStressTrack()')


		#consequences.sheet-panel
			a#conseq
			p.sectionHeader Consequences
				if logged_user == owner
					input.iconButton(type='image', src='/static/img/glyphicons/glyphicons_150_edit.png',
						onclick='viewModel.consequences.editing( !viewModel.consequences.editing() )')

			#conseqBlock(data-bind='foreach: consequences')
				//hr(style='width: 100%;', data-bind='visible: $index() > 0')
				.row(data-bind='css: {"top-divider": $index() > 0}')
					.horizgroup
						input.removeButton(type='image', data-bind='visible: $root.consequences.editing, event: {click: removeConsequence}', src='/static/img/glyphicons/glyphicons_192_circle_remove.png')
						.vertgroup
							.header(data-bind='visible: !$root.consequences.editing(), text: severity() + " ("+magnitude()+")"')
							.subtitle(data-bind='visible: !$root.consequences.editing(), text: mode() + " Type"')
							select(data-bind='visible: $root.consequences.editing, value: severity')
								option(value='Mild') Mild (-2)
								option(value='Moderate') Moderate (-4)
								option(value='Severe') Severe (-6)
								option(value='Extreme') Extreme (-8)
							select(data-bind='visible: $root.consequences.editing, options: $root.stress_types, value: mode')

					//-input.stressBox(type='checkbox', onchange='updateConseqAspect(this)', data-bind='attr: {id: "conseq"+$index()}, checked: used')
						if logged_user == owner
							label(data-bind='attr: {for: "conseq"+$index()}')
						else
							label
					.aspect
						span(data-bind='visible: !editing(), text: aspect() == "" ? "Unused" : aspect(), css: {grey: aspect() == ""}', onclick='focusIn(this)')
						input(type='text', data-bind='visible: editing, value: aspect', onblur='focusOut(this)', onkeyup='checkReturn(this,event)', style='width: 100%;')

					

			input.iconButton(type='image', data-bind='visible: $root.consequences.editing',
				src='/static/img/glyphicons/glyphicons_190_circle_plus.png', onclick='addConsequence()')

	.sheet-panel-group

		#totals.sheet-panel(data-bind='with: totals')
			a#totals
			if logged_user == owner
				input.iconButton(type='image', src='/static/img/glyphicons/glyphicons_150_edit.png', style='left: 330px',
					style='position: absolute; right: 8px;',
					onclick='viewModel.totals.editing( !viewModel.totals.editing() )')

			img#star(src='/static/img/pentacle.svg')

			#top-container.container
				#powerLevelContainer
					#powerLevel(data-bind='visible: !editing()')
						span Power Level:
						br
						span(data-bind='text: power_level')
					label(data-bind='if: editing') Skill Points:
						br
						input(type='number', data-bind='value: skills_total')

				#skillCapContainer
					#skillCap
						span Skill Cap:
						br
						span(data-bind='visible: !editing(), text: skill_cap_text')
						input(type='number', min=1, max=8, data-bind='visible: editing, value: skill_cap')
					label(data-bind='if: editing')

			#mid-container.container
				#spent-container
					span#skillsSpent.bubble(data-bind='text: skills_spent') 
					span Skill Points Spent
				#available-container
					span#skillsAvailable.bubble(data-bind='text: skills_available')
					span Available

			#bottom-container.container
				.row
					span#baseRefresh.bubble.doubleBubble(data-bind='visible: !editing(), text: base_refresh')
					input.bubble.doubleBubble(type='number', min=0, data-bind='visible: editing, value: base_refresh')
					span Base Refresh Level
				.row
					span#adjustedRefresh.bubble.doubleBubble(data-bind='text: adjusted_refresh')
					span Adjusted Refresh
				.row
					span#fatePoints.bubble.doubleBubble(data-bind='visible: !editing(), text: fate_points')
					input.bubble.doubleBubble(type='number', min=0, data-bind='visible: editing, value: fate_points')
					span Fate Points
		
		#powers.sheet-panel
			a#powers
			p.sectionHeader Stunts & Powers
				if logged_user == owner
					input.iconButton(type='image', src='/static/img/glyphicons/glyphicons_150_edit.png',
						onclick='viewModel.powers.editing( !viewModel.powers.editing() )')

			table#powerTable
				thead: tr
					th Cost
					th Ability

				tbody

					// ko foreach: powers
					tr(data-bind='ifnot: $root.powers.editing')
						td.mainRow(data-bind='text: cost')
						td.mainRow(data-bind='text: name')
					tr(data-bind='if: $root.powers.editing')
						td.mainRow: input(type='number', min='-8', max='8', data-bind='value: cost')
						td.mainRow: input(type='text', data-bind='value: name')
					tr(data-bind='if: description().length > 0 && !$root.powers.editing()')
						td &nbsp;
						td(data-bind='foreach: description')
							p.descriptionLine(data-bind='text: $data')
					tr(data-bind='if: $root.powers.editing')
						td: input.iconButton(type='image', src='/static/img/glyphicons/glyphicons_192_circle_remove.png',
							data-bind='attr: {onclick: "removePower("+$index()+")"}')
						td: textarea(data-bind='value: full_description')

					// /ko

					tr
						td.mainRow(style='border-top: solid black 1px;', data-bind='text: $root.totals.refresh_adjustment')
						td.mainRow Total Refresh Adjustment

			input.iconButton(type='image', data-bind='visible: powers.editing',
				src='/static/img/glyphicons/glyphicons_190_circle_plus.png', onclick='addPower()')

	.sheet-panel-group(data-bind='if: $root.casting.enabled, visible: $root.casting.enabled')
		a#spellcasting

		#rotes.sheet-panel
			p.sectionHeader(style='margin-bottom: 10px;') Rote Spells
				if logged_user == owner
					input.iconButton(type='image', src='/static/img/glyphicons/glyphicons_150_edit.png',
						onclick='viewModel.casting.editingRotes( !viewModel.casting.editingRotes() )')

			#rote-list-container(data-bind='foreach: casting.rotes', style='text-align: left')
				.rote-container
					div(data-bind='ifnot: $root.casting.editingRotes, visible: !$root.casting.editingRotes()')
						span(style='font-size: 14pt; font-style: italic;', data-bind='text: name')
						ul(style='margin-top: 3px;')
							li(data-bind='text: power()+" Shift "+element()+" "+effect()')
							li(data-bind='text: description, visible: description()!=""')

					div(data-bind='if: $root.casting.editingRotes, visible: $root.casting.editingRotes')
						input(style='width: 250px; height: 20px;', data-bind='value: name')
						ul(style='margin-top: 3px;')
							li
								input(type='number', min=0, max=8, data-bind='value: power')
								| Shift
								select(data-bind='value: element')
									option Water
									option Earth
									option Fire
									option Air
									option Spirit

								select(data-bind='value: effect')
									option Attack
									option Block
									option Maneuver
									option Counterspell

							li
								textarea(style='width: 200px; height: 50px;', data-bind='value: description', placeholder='Enter a rote description')

			input.iconButton(type='image', data-bind='visible: casting.editingRotes, event: {click: casting.rotes.add}',
				src='/static/img/glyphicons/glyphicons_190_circle_plus.png')

		#calc.sheet-panel
			p.sectionHeader Spell Workspace
				if logged_user == owner
					input.iconButton(type='image', src='/static/img/glyphicons/glyphicons_150_edit.png',
						onclick='viewModel.casting.workspace.editing( !viewModel.casting.workspace.editing() )')

	

	.sheet-panel-group

		#notes.sheet-panel(data-bind='if: $root.notes.enabled, visible: $root.notes.enabled')
			a#notes
			p.sectionHeader Notes
				if logged_user == owner
					input.iconButton(type='image', src='/static/img/glyphicons/glyphicons_150_edit.png',
						onclick='viewModel.notes.editing( !viewModel.notes.editing() )')

			div(data-bind='visible: $root.notes.editing')
				p Text is styled with Markdown. Click out of the text box to update preview.
				.accordion(data-bind='accordion: true')
					a(href='javascript:;') A Brief Primer
					pre#primer
						| This is a header
						| ----------------
						| 
						| ## So is this
						| 
						| Paragraphs are separated by a blank line.
						| 
						| You can also **bold** and *italics*.
						| 
						| 1. Numeric lists start with a number.
						| 2. See? Easy!
						| 3. Subitems are indented 4 spaces
						|     * But this one is an unordered list
						|     * Another list item

				textarea#editor(data-bind='value: $root.notes.text')

			.inner(data-bind='html: $root.notes.html')
